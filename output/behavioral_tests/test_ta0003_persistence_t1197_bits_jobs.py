import unittest

from internal.logtest import LogtestStatus, send_multiple_logs  # type: ignore


class TestTa0003PersistenceT1197BitsJobs(unittest.TestCase):

    def test_id3_59_60_bits_job_created(self) -> None:
        # Logs extracted from EVTX file
        logs = [
            r'''{"win": {"system": {"providerName": "Microsoft-Windows-Bits-Client", "providerGuid": "{ef1cc15b-46c1-414e-bb95-e76b077bd51e}", "eventID": "3", "version": "2", "level": "4", "task": "0", "opcode": "0", "keywords": "0x4000000000000000", "systemTime": "2021-02-22T23:07:21.0433560Z", "eventRecordID": "10260", "processID": "1104", "threadID": "9132", "channel": "Microsoft-Windows-Bits-Client/Operational", "computer": "jump01.offsec.lan", "severityValue": "INFORMATION", "message": "The BITS service created a new job.\nTransfer job: hackingarticles\nJob ID: {5f2863d6-e0ab-4470-8530-8f129b46177a}\nOwner: OFFSEC\\admmig\nProcess Path: C:\\Windows\\System32\\bitsadmin.exe\nProcess ID: 7680"}, "eventdata": {"jobTitle": "hackingarticles", "jobId": "{5f2863d6-e0ab-4470-8530-8f129b46177a}", "jobOwner": "OFFSEC\\admmig", "processPath": "C:\\Windows\\System32\\bitsadmin.exe", "processId": "7680"}}}''',
            r'''{"win": {"system": {"providerName": "Microsoft-Windows-Bits-Client", "providerGuid": "{ef1cc15b-46c1-414e-bb95-e76b077bd51e}", "eventID": "310", "version": "0", "level": "3", "task": "0", "opcode": "0", "keywords": "0x4000000000000000", "systemTime": "2021-02-22T23:07:21.2183344Z", "eventRecordID": "10261", "processID": "1104", "threadID": "3788", "channel": "Microsoft-Windows-Bits-Client/Operational", "computer": "jump01.offsec.lan", "severityValue": "WARNING", "message": "The initialization of the peer helper modules failed with the following error:  0x80070032."}, "eventdata": {}}}''',
            r'''{"win": {"system": {"providerName": "Microsoft-Windows-Bits-Client", "providerGuid": "{ef1cc15b-46c1-414e-bb95-e76b077bd51e}", "eventID": "59", "version": "1", "level": "4", "task": "0", "opcode": "1", "keywords": "0x4000000000000000", "systemTime": "2021-02-22T23:07:21.2319507Z", "eventRecordID": "10262", "processID": "1104", "threadID": "3788", "channel": "Microsoft-Windows-Bits-Client/Operational", "computer": "jump01.offsec.lan", "severityValue": "INFORMATION", "message": "BITS started the hackingarticles transfer job that is associated with the https://www.ma-neobanque.com/wp-content/uploads/2020/11/carte-max-premium.jpg URL."}, "eventdata": {"transferId": "{746fd3d9-d296-42da-9f9c-b7ff6fa9151b}", "name": "hackingarticles", "id": "{5f2863d6-e0ab-4470-8530-8f129b46177a}", "url": "https://www.ma-neobanque.com/wp-content/uploads/2020/11/carte-max-premium.jpg", "fileTime": "2020-11-16T17:00:19.0000000Z", "fileLength": "50813", "bytesTotal": "50813", "bytesTransferred": "0", "bytesTransferredFromPeer": "0"}}}''',
            r'''{"win": {"system": {"providerName": "Microsoft-Windows-Bits-Client", "providerGuid": "{ef1cc15b-46c1-414e-bb95-e76b077bd51e}", "eventID": "60", "version": "1", "level": "4", "task": "0", "opcode": "2", "keywords": "0x4000000000000000", "systemTime": "2021-02-22T23:07:47.8308691Z", "eventRecordID": "10263", "processID": "1104", "threadID": "9132", "channel": "Microsoft-Windows-Bits-Client/Operational", "computer": "jump01.offsec.lan", "severityValue": "INFORMATION", "message": "BITS stopped transferring the hackingarticles transfer job that is associated with the https://www.ma-neobanque.com/wp-content/uploads/2020/11/carte-max-premium.jpg URL. The status code is 0x0."}, "eventdata": {"transferId": "{746fd3d9-d296-42da-9f9c-b7ff6fa9151b}", "name": "hackingarticles", "id": "{5f2863d6-e0ab-4470-8530-8f129b46177a}", "url": "https://www.ma-neobanque.com/wp-content/uploads/2020/11/carte-max-premium.jpg", "hr": "0", "fileTime": "2020-11-16T17:00:19.0000000Z", "fileLength": "50813", "bytesTotal": "50813", "bytesTransferred": "50813", "peerProtocolFlags": "0", "bytesTransferredFromPeer": "0", "additionalInfoHr": "0", "peerContextInfo": "0", "bandwidthLimit": "18446744073709551615", "ignoreBandwidthLimitsOnLan": "false"}}}''',
            r'''{"win": {"system": {"providerName": "Microsoft-Windows-Bits-Client", "providerGuid": "{ef1cc15b-46c1-414e-bb95-e76b077bd51e}", "eventID": "4", "version": "1", "level": "4", "task": "0", "opcode": "0", "keywords": "0x4000000000000000", "systemTime": "2021-02-22T23:07:47.8390439Z", "eventRecordID": "10264", "processID": "1104", "threadID": "4880", "channel": "Microsoft-Windows-Bits-Client/Operational", "computer": "jump01.offsec.lan", "severityValue": "INFORMATION", "message": "The transfer job is complete.\nUser: OFFSEC\\admmig\nTransfer job: hackingarticles\nJob ID: {5f2863d6-e0ab-4470-8530-8f129b46177a}\nOwner: OFFSEC\\admmig\nFile count: 1"}, "eventdata": {"user": "OFFSEC\\admmig", "jobTitle": "hackingarticles", "jobId": "{5f2863d6-e0ab-4470-8530-8f129b46177a}", "jobOwner": "OFFSEC\\admmig", "fileCount": "1", "bytesTransferred": "50813", "bytesTransferredFromPeer": "0"}}}'''
        ]

        responses = send_multiple_logs(logs, location="stdin", log_format="json")

        # Ensure we receive a response for each log sent
        self.assertEqual(len(responses), len(logs))

        for _, response in enumerate(responses):
            self.assertEqual(response.status, LogtestStatus.RuleMatch)
            self.assertEqual(response.decoder, 'json')

            # Example: Set expected Wazuh rule ID and level when analyzing logs
            # expected_rule_id = None  # Replace with actual rule ID
            # expected_rule_level = None  # Replace with actual rule level

            # self.assertEqual(response.rule_id, expected_rule_id)
            # self.assertEqual(response.rule_level, expected_rule_level)

        # TODO: Write the expected result as test cases when the logs are analyzed by Wazuh.
        self.fail("Test not implemented yet. Define expected results.")

    def test_id4688_bits_transfer_initiated(self) -> None:
        # Logs extracted from EVTX file
        logs = [
            r'''{"win": {"system": {"providerName": "Microsoft-Windows-Security-Auditing", "providerGuid": "{54849625-5478-4994-a5ba-3e3b0328c30d}", "eventID": "4688", "version": "2", "level": "0", "task": "13312", "opcode": "0", "keywords": "0x8020000000000000", "systemTime": "2021-02-22T23:07:20.7943835Z", "eventRecordID": "8528057", "processID": "4", "threadID": "5656", "channel": "Security", "computer": "jump01.offsec.lan", "severityValue": "AUDIT_SUCCESS", "message": "A new process has been created.\n\nCreator Subject:\n\tSecurity ID:\t\tS-1-5-21-4230534742-2542757381-3142984815-1111\n\tAccount Name:\t\tadmmig\n\tAccount Domain:\t\tOFFSEC\n\tLogon ID:\t\t0x92E21\n\nTarget Subject:\n\tSecurity ID:\t\tS-1-0-0\n\tAccount Name:\t\t-\n\tAccount Domain:\t\t-\n\tLogon ID:\t\t0x0\n\nProcess Information:\n\tNew Process ID:\t\t0x1e00\n\tNew Process Name:\tC:\\Windows\\System32\\bitsadmin.exe\n\tToken Elevation Type:\t%%1937\n\tMandatory Label:\t\tS-1-16-12288\n\tCreator Process ID:\t0x1ff8\n\tCreator Process Name:\tC:\\Windows\\System32\\cmd.exe\n\tProcess Command Line:\tbitsadmin  /transfer hackingarticles https://www.ma-neobanque.com/wp-content/uploads/2020/11/carte-max-premium.jpg c:\\ignite.png\n\nToken Elevation Type indicates the type of token that was assigned to the new process in accordance with User Account Control policy.\n\nType 1 is a full token with no privileges removed or groups disabled.  A full token is only used if User Account Control is disabled or if the user is the built-in Administrator account or a service account.\n\nType 2 is an elevated token with no privileges removed or groups disabled.  An elevated token is used when User Account Control is enabled and the user chooses to start the program using Run as administrator.  An elevated token is also used when an application is configured to always require administrative privilege or to always require maximum privilege, and the user is a member of the Administrators group.\n\nType 3 is a limited token with administrative privileges removed and administrative groups disabled.  The limited token is used when User Account Control is enabled, the application does not require administrative privilege, and the user does not choose to start the program using Run as administrator."}, "eventdata": {"subjectUserSid": "S-1-5-21-4230534742-2542757381-3142984815-1111", "subjectUserName": "admmig", "subjectDomainName": "OFFSEC", "subjectLogonId": "0x92e21", "newProcessId": "0x1e00", "newProcessName": "C:\\Windows\\System32\\bitsadmin.exe", "tokenElevationType": "%%1937", "processId": "0x1ff8", "commandLine": "bitsadmin  /transfer hackingarticles https://www.ma-neobanque.com/wp-content/uploads/2020/11/carte-max-premium.jpg c:\\ignite.png", "targetUserSid": "S-1-0-0", "targetLogonId": "0x0", "parentProcessName": "C:\\Windows\\System32\\cmd.exe", "mandatoryLabel": "S-1-16-12288"}}}''',
            r'''{"win": {"system": {"providerName": "Microsoft-Windows-Security-Auditing", "providerGuid": "{54849625-5478-4994-a5ba-3e3b0328c30d}", "eventID": "4688", "version": "2", "level": "0", "task": "13312", "opcode": "0", "keywords": "0x8020000000000000", "systemTime": "2021-02-22T23:08:02.5340674Z", "eventRecordID": "8528058", "processID": "4", "threadID": "1048", "channel": "Security", "computer": "jump01.offsec.lan", "severityValue": "AUDIT_SUCCESS", "message": "A new process has been created.\n\nCreator Subject:\n\tSecurity ID:\t\tS-1-5-18\n\tAccount Name:\t\tJUMP01$\n\tAccount Domain:\t\tOFFSEC\n\tLogon ID:\t\t0x3E7\n\nTarget Subject:\n\tSecurity ID:\t\tS-1-5-21-4230534742-2542757381-3142984815-1111\n\tAccount Name:\t\tadmmig\n\tAccount Domain:\t\tOFFSEC\n\tLogon ID:\t\t0x92F98\n\nProcess Information:\n\tNew Process ID:\t\t0x1c30\n\tNew Process Name:\tC:\\Windows\\System32\\dllhost.exe\n\tToken Elevation Type:\t%%1938\n\tMandatory Label:\t\tS-1-16-8192\n\tCreator Process ID:\t0x308\n\tCreator Process Name:\tC:\\Windows\\System32\\svchost.exe\n\tProcess Command Line:\tC:\\Windows\\system32\\DllHost.exe /Processid:{AB8902B4-09CA-4BB6-B78D-A8F59079A8D5}\n\nToken Elevation Type indicates the type of token that was assigned to the new process in accordance with User Account Control policy.\n\nType 1 is a full token with no privileges removed or groups disabled.  A full token is only used if User Account Control is disabled or if the user is the built-in Administrator account or a service account.\n\nType 2 is an elevated token with no privileges removed or groups disabled.  An elevated token is used when User Account Control is enabled and the user chooses to start the program using Run as administrator.  An elevated token is also used when an application is configured to always require administrative privilege or to always require maximum privilege, and the user is a member of the Administrators group.\n\nType 3 is a limited token with administrative privileges removed and administrative groups disabled.  The limited token is used when User Account Control is enabled, the application does not require administrative privilege, and the user does not choose to start the program using Run as administrator."}, "eventdata": {"subjectUserSid": "S-1-5-18", "subjectUserName": "JUMP01$", "subjectDomainName": "OFFSEC", "subjectLogonId": "0x3e7", "newProcessId": "0x1c30", "newProcessName": "C:\\Windows\\System32\\dllhost.exe", "tokenElevationType": "%%1938", "processId": "0x308", "commandLine": "C:\\Windows\\system32\\DllHost.exe /Processid:{AB8902B4-09CA-4BB6-B78D-A8F59079A8D5}", "targetUserSid": "S-1-5-21-4230534742-2542757381-3142984815-1111", "targetUserName": "admmig", "targetDomainName": "OFFSEC", "targetLogonId": "0x92f98", "parentProcessName": "C:\\Windows\\System32\\svchost.exe", "mandatoryLabel": "S-1-16-8192"}}}'''
        ]

        responses = send_multiple_logs(logs, location="stdin", log_format="json")

        # Ensure we receive a response for each log sent
        self.assertEqual(len(responses), len(logs))

        for _, response in enumerate(responses):
            self.assertEqual(response.status, LogtestStatus.RuleMatch)
            self.assertEqual(response.decoder, 'json')

            # Example: Set expected Wazuh rule ID and level when analyzing logs
            # expected_rule_id = None  # Replace with actual rule ID
            # expected_rule_level = None  # Replace with actual rule level

            # self.assertEqual(response.rule_id, expected_rule_id)
            # self.assertEqual(response.rule_level, expected_rule_level)

        # TODO: Write the expected result as test cases when the logs are analyzed by Wazuh.
        self.fail("Test not implemented yet. Define expected results.")

    def test_id60_high_volume_file_downloaded_with_bits(self) -> None:
        # Logs extracted from EVTX file
        logs = [
            r'''{"win": {"system": {"providerName": "Microsoft-Windows-Bits-Client", "providerGuid": "{ef1cc15b-46c1-414e-bb95-e76b077bd51e}", "eventID": "3", "version": "0", "level": "4", "task": "0", "opcode": "0", "keywords": "0x4000000000000000", "systemTime": "2021-10-21T17:52:47.0723122Z", "eventRecordID": "1129", "processID": "768", "threadID": "4460", "channel": "Microsoft-Windows-Bits-Client/Operational", "computer": "FS03.offsec.lan", "severityValue": "INFORMATION", "message": "The BITS service created a new job: BITS Transfer, with owner OFFSEC\\admmig"}, "eventdata": {"string": "BITS Transfer", "string2": "OFFSEC\\admmig"}}}''',
            r'''{"win": {"system": {"providerName": "Microsoft-Windows-Bits-Client", "providerGuid": "{ef1cc15b-46c1-414e-bb95-e76b077bd51e}", "eventID": "5", "version": "0", "level": "4", "task": "0", "opcode": "0", "keywords": "0x4000000000000000", "systemTime": "2021-10-21T17:52:48.5927980Z", "eventRecordID": "1130", "processID": "768", "threadID": "4424", "channel": "Microsoft-Windows-Bits-Client/Operational", "computer": "FS03.offsec.lan", "severityValue": "INFORMATION", "message": "Job cancelled. User: OFFSEC\\admmig, job: BITS Transfer, jobID: {2e340c8c-7f77-401f-90fd-578049749afb}, owner: OFFSEC\\admmig, filecount: 1"}, "eventdata": {"user": "OFFSEC\\admmig", "jobTitle": "BITS Transfer", "jobId": "{2e340c8c-7f77-401f-90fd-578049749afb}", "jobOwner": "OFFSEC\\admmig", "fileCount": "1"}}}''',
            r'''{"win": {"system": {"providerName": "Microsoft-Windows-Bits-Client", "providerGuid": "{ef1cc15b-46c1-414e-bb95-e76b077bd51e}", "eventID": "3", "version": "0", "level": "4", "task": "0", "opcode": "0", "keywords": "0x4000000000000000", "systemTime": "2021-10-21T17:53:36.6438795Z", "eventRecordID": "1131", "processID": "768", "threadID": "1788", "channel": "Microsoft-Windows-Bits-Client/Operational", "computer": "FS03.offsec.lan", "severityValue": "INFORMATION", "message": "The BITS service created a new job: BITS Transfer, with owner OFFSEC\\admmig"}, "eventdata": {"string": "BITS Transfer", "string2": "OFFSEC\\admmig"}}}''',
            r'''{"win": {"system": {"providerName": "Microsoft-Windows-Bits-Client", "providerGuid": "{ef1cc15b-46c1-414e-bb95-e76b077bd51e}", "eventID": "59", "version": "1", "level": "4", "task": "0", "opcode": "1", "keywords": "0x4000000000000000", "systemTime": "2021-10-21T17:53:42.5306620Z", "eventRecordID": "1132", "processID": "768", "threadID": "4256", "channel": "Microsoft-Windows-Bits-Client/Operational", "computer": "FS03.offsec.lan", "severityValue": "INFORMATION", "message": "BITS started the BITS Transfer transfer job that is associated with the https://releases.ubuntu.com/20.04.3/ubuntu-20.04.3-desktop-amd64.iso URL."}, "eventdata": {"transferId": "{470f04e8-35f7-474f-9d19-3444a2826db1}", "name": "BITS Transfer", "id": "{ebfcb3cd-6489-40ef-8eb7-7e0d6b4dd4ff}", "url": "https://releases.ubuntu.com/20.04.3/ubuntu-20.04.3-desktop-amd64.iso", "fileTime": "2021-08-19T11:06:00.0000000Z", "fileLength": "3071934464", "bytesTotal": "3071934464", "bytesTransferred": "0", "bytesTransferredFromPeer": "0"}}}''',
            r'''{"win": {"system": {"providerName": "Microsoft-Windows-Bits-Client", "providerGuid": "{ef1cc15b-46c1-414e-bb95-e76b077bd51e}", "eventID": "60", "version": "1", "level": "4", "task": "0", "opcode": "2", "keywords": "0x4000000000000000", "systemTime": "2021-10-21T18:05:47.8991737Z", "eventRecordID": "1133", "processID": "768", "threadID": "4424", "channel": "Microsoft-Windows-Bits-Client/Operational", "computer": "FS03.offsec.lan", "severityValue": "INFORMATION", "message": "BITS stopped transferring the BITS Transfer transfer job that is associated with the https://releases.ubuntu.com/20.04.3/ubuntu-20.04.3-desktop-amd64.iso URL. The status code is 0x40008."}, "eventdata": {"transferId": "{470f04e8-35f7-474f-9d19-3444a2826db1}", "name": "BITS Transfer", "id": "{ebfcb3cd-6489-40ef-8eb7-7e0d6b4dd4ff}", "url": "https://releases.ubuntu.com/20.04.3/ubuntu-20.04.3-desktop-amd64.iso", "hr": "262152", "fileTime": "2021-08-19T11:06:00.0000000Z", "fileLength": "3071934464", "bytesTotal": "3071934464", "bytesTransferred": "2497476607", "peerProtocolFlags": "0", "bytesTransferredFromPeer": "0", "additionalInfoHr": "0", "peerContextInfo": "0", "bandwidthLimit": "18446744073709551615", "ignoreBandwidthLimitsOnLan": "false"}}}''',
            r'''{"win": {"system": {"providerName": "Microsoft-Windows-Bits-Client", "providerGuid": "{ef1cc15b-46c1-414e-bb95-e76b077bd51e}", "eventID": "5", "version": "0", "level": "4", "task": "0", "opcode": "0", "keywords": "0x4000000000000000", "systemTime": "2021-10-21T18:05:47.8991737Z", "eventRecordID": "1134", "processID": "768", "threadID": "4424", "channel": "Microsoft-Windows-Bits-Client/Operational", "computer": "FS03.offsec.lan", "severityValue": "INFORMATION", "message": "Job cancelled. User: OFFSEC\\admmig, job: BITS Transfer, jobID: {ebfcb3cd-6489-40ef-8eb7-7e0d6b4dd4ff}, owner: OFFSEC\\admmig, filecount: 1"}, "eventdata": {"user": "OFFSEC\\admmig", "jobTitle": "BITS Transfer", "jobId": "{ebfcb3cd-6489-40ef-8eb7-7e0d6b4dd4ff}", "jobOwner": "OFFSEC\\admmig", "fileCount": "1"}}}'''
        ]

        responses = send_multiple_logs(logs, location="stdin", log_format="json")

        # Ensure we receive a response for each log sent
        self.assertEqual(len(responses), len(logs))

        for _, response in enumerate(responses):
            self.assertEqual(response.status, LogtestStatus.RuleMatch)
            self.assertEqual(response.decoder, 'json')

            # Example: Set expected Wazuh rule ID and level when analyzing logs
            # expected_rule_id = None  # Replace with actual rule ID
            # expected_rule_level = None  # Replace with actual rule level

            # self.assertEqual(response.rule_id, expected_rule_id)
            # self.assertEqual(response.rule_level, expected_rule_level)

        # TODO: Write the expected result as test cases when the logs are analyzed by Wazuh.
        self.fail("Test not implemented yet. Define expected results.")

    def test_id800_4103_4104_powershell_bits_job_started(self) -> None:
        # Logs extracted from EVTX file
        logs = [
            r'''{"win": {"system": {"providerName": "PowerShell", "providerGuid": {"@Name": "PowerShell"}, "eventID": "800", "level": "4", "task": "8", "keywords": "0x80000000000000", "systemTime": "2021-10-21T17:38:36.0000000Z", "eventRecordID": "471", "channel": "Windows PowerShell", "computer": "FS03.offsec.lan", "severityValue": "INFORMATION", "message": "Pipeline execution details for command line: RequiredAssemblies=Join-Path $psScriptRoot \"Microsoft.BackgroundIntelligentTransfer.Management.Interop.dll\"\n. \n\nContext Information: \n\tDetailSequence=1\n\tDetailTotal=1\n\n\tSequenceNumber=21\n\n\tUserId=OFFSEC\\admmig\n\tHostName=ConsoleHost\n\tHostVersion=4.0\n\tHostId=2bc3f2aa-3ec3-49cc-a618-e2d1232518fb\n\tHostApplication=C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\n\tEngineVersion=4.0\n\tRunspaceId=e3cd9014-9076-4ada-ac80-9055ed3282c1\n\tPipelineId=7\n\tScriptName=C:\\windows\\system32\\windowspowershell\\v1.0\\Modules\\BitsTransfer\\BitsTransfer.psd1\n\tCommandLine=RequiredAssemblies=Join-Path $psScriptRoot \"Microsoft.BackgroundIntelligentTransfer.Management.Interop.dll\"\n \n\nDetails: \nCommandInvocation(Join-Path): \"Join-Path\"\nParameterBinding(Join-Path): name=\"Path\"; value=\"C:\\windows\\system32\\windowspowershell\\v1.0\\Modules\\BitsTransfer\"\nParameterBinding(Join-Path): name=\"ChildPath\"; value=\"Microsoft.BackgroundIntelligentTransfer.Management.Interop.dll\""}, "eventdata": {}}}''',
            r'''{"win": {"system": {"providerName": "Microsoft-Windows-PowerShell", "providerGuid": "{a0c1853b-5c40-4b15-8766-3cf1c58f985a}", "eventID": "4104", "version": "1", "level": "5", "task": "102", "opcode": "15", "keywords": "0x0", "systemTime": "2021-10-21T17:38:36.7114620Z", "eventRecordID": "1736", "processID": "3336", "threadID": "3892", "channel": "Microsoft-Windows-PowerShell/Operational", "computer": "FS03.offsec.lan", "severityValue": "VERBOSE", "message": "Creating Scriptblock text (1 of 1):\nStart-BitsTransfer -Priority foreground -Source https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1197/T1197.md -Destination C:\\Users\\bits.ps1\n\nScriptBlock ID: 76350588-4aa4-4047-9ecb-9b285c4fa71b\nPath: %5"}, "eventdata": {"messageNumber": "1", "messageTotal": "1", "scriptBlockText": "Start-BitsTransfer -Priority foreground -Source https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1197/T1197.md -Destination C:\\Users\\bits.ps1", "scriptBlockId": "76350588-4aa4-4047-9ecb-9b285c4fa71b"}}}''',
            r'''{"win": {"system": {"providerName": "Microsoft-Windows-PowerShell", "providerGuid": "{a0c1853b-5c40-4b15-8766-3cf1c58f985a}", "eventID": "4104", "version": "1", "level": "5", "task": "102", "opcode": "15", "keywords": "0x0", "systemTime": "2021-10-21T17:38:36.7426383Z", "eventRecordID": "1737", "processID": "3336", "threadID": "3892", "channel": "Microsoft-Windows-PowerShell/Operational", "computer": "FS03.offsec.lan", "severityValue": "VERBOSE", "message": "Creating Scriptblock text (1 of 1):\n@{\nGUID=\"{8FA5064B-8479-4c5c-86EA-0D311FE48875}\"\nAuthor=\"Microsoft Corporation\"\nCompanyName=\"Microsoft Corporation\"\nCopyright=\"\u00a9 Microsoft Corporation. All rights reserved.\"\nModuleVersion=\"1.0.0.0\"\nPowerShellVersion=\"2.0\"\nCLRVersion=\"2.0\"\nNestedModules=\"Microsoft.BackgroundIntelligentTransfer.Management\"\nFormatsToProcess=\"BitsTransfer.Format.ps1xml\"\nRequiredAssemblies=Join-Path $psScriptRoot \"Microsoft.BackgroundIntelligentTransfer.Management.Interop.dll\"\nCmdletsToExport=\"Add-BitsFile\",\"Complete-BitsTransfer\",\"Get-BitsTransfer\",\"Remove-BitsTransfer\",\"Resume-BitsTransfer\",\"Set-BitsTransfer\",\"Start-BitsTransfer\",\"Suspend-BitsTransfer\"\n}\n\n\nScriptBlock ID: 8e076078-190c-467f-93ed-9ebfdf8a31af\nPath: %5"}, "eventdata": {"messageNumber": "1", "messageTotal": "1", "scriptBlockText": "@{\nGUID=\"{8FA5064B-8479-4c5c-86EA-0D311FE48875}\"\nAuthor=\"Microsoft Corporation\"\nCompanyName=\"Microsoft Corporation\"\nCopyright=\"\u00a9 Microsoft Corporation. All rights reserved.\"\nModuleVersion=\"1.0.0.0\"\nPowerShellVersion=\"2.0\"\nCLRVersion=\"2.0\"\nNestedModules=\"Microsoft.BackgroundIntelligentTransfer.Management\"\nFormatsToProcess=\"BitsTransfer.Format.ps1xml\"\nRequiredAssemblies=Join-Path $psScriptRoot \"Microsoft.BackgroundIntelligentTransfer.Management.Interop.dll\"\nCmdletsToExport=\"Add-BitsFile\",\"Complete-BitsTransfer\",\"Get-BitsTransfer\",\"Remove-BitsTransfer\",\"Resume-BitsTransfer\",\"Set-BitsTransfer\",\"Start-BitsTransfer\",\"Suspend-BitsTransfer\"\n}", "scriptBlockId": "8e076078-190c-467f-93ed-9ebfdf8a31af"}}}''',
            r'''{"win": {"system": {"providerName": "Microsoft-Windows-PowerShell", "providerGuid": "{a0c1853b-5c40-4b15-8766-3cf1c58f985a}", "eventID": "4103", "version": "1", "level": "4", "task": "106", "opcode": "20", "keywords": "0x0", "systemTime": "2021-10-21T17:38:36.7426383Z", "eventRecordID": "1738", "processID": "3336", "threadID": "3892", "channel": "Microsoft-Windows-PowerShell/Operational", "computer": "FS03.offsec.lan", "severityValue": "INFORMATION", "message": "CommandInvocation(Join-Path): \"Join-Path\"\nParameterBinding(Join-Path): name=\"Path\"; value=\"C:\\windows\\system32\\windowspowershell\\v1.0\\Modules\\BitsTransfer\"\nParameterBinding(Join-Path): name=\"ChildPath\"; value=\"Microsoft.BackgroundIntelligentTransfer.Management.Interop.dll\"\n\n\nContext:\n        Severity = Informational\n        Host Name = ConsoleHost\n        Host Version = 4.0\n        Host ID = 2bc3f2aa-3ec3-49cc-a618-e2d1232518fb\n        Host Application = C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\n        Engine Version = 4.0\n        Runspace ID = e3cd9014-9076-4ada-ac80-9055ed3282c1\n        Pipeline ID = 7\n        Command Name = Join-Path\n        Command Type = Cmdlet\n        Script Name = C:\\windows\\system32\\windowspowershell\\v1.0\\Modules\\BitsTransfer\\BitsTransfer.psd1\n        Command Path = \n        Sequence Number = 22\n        User = OFFSEC\\admmig\n        Shell ID = Microsoft.PowerShell\n\n\nUser Data:"}, "eventdata": {"contextInfo": "Severity = Informational\n        Host Name = ConsoleHost\n        Host Version = 4.0\n        Host ID = 2bc3f2aa-3ec3-49cc-a618-e2d1232518fb\n        Host Application = C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\n        Engine Version = 4.0\n        Runspace ID = e3cd9014-9076-4ada-ac80-9055ed3282c1\n        Pipeline ID = 7\n        Command Name = Join-Path\n        Command Type = Cmdlet\n        Script Name = C:\\windows\\system32\\windowspowershell\\v1.0\\Modules\\BitsTransfer\\BitsTransfer.psd1\n        Command Path = \n        Sequence Number = 22\n        User = OFFSEC\\admmig\n        Shell ID = Microsoft.PowerShell", "payload": "CommandInvocation(Join-Path): \"Join-Path\"\nParameterBinding(Join-Path): name=\"Path\"; value=\"C:\\windows\\system32\\windowspowershell\\v1.0\\Modules\\BitsTransfer\"\nParameterBinding(Join-Path): name=\"ChildPath\"; value=\"Microsoft.BackgroundIntelligentTransfer.Management.Interop.dll\""}}}''',
            r'''{"win": {"system": {"providerName": "PowerShell", "providerGuid": {"@Name": "PowerShell"}, "eventID": "800", "level": "4", "task": "8", "keywords": "0x80000000000000", "systemTime": "2021-10-21T17:38:37.0000000Z", "eventRecordID": "472", "channel": "Windows PowerShell", "computer": "FS03.offsec.lan", "severityValue": "INFORMATION", "message": "Pipeline execution details for command line: Start-BitsTransfer -Priority foreground -Source https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1197/T1197.md -Destination C:\\Users\\bits.ps1. \n\nContext Information: \n\tDetailSequence=1\n\tDetailTotal=1\n\n\tSequenceNumber=23\n\n\tUserId=OFFSEC\\admmig\n\tHostName=ConsoleHost\n\tHostVersion=4.0\n\tHostId=2bc3f2aa-3ec3-49cc-a618-e2d1232518fb\n\tHostApplication=C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\n\tEngineVersion=4.0\n\tRunspaceId=e3cd9014-9076-4ada-ac80-9055ed3282c1\n\tPipelineId=6\n\tScriptName=\n\tCommandLine=Start-BitsTransfer -Priority foreground -Source https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1197/T1197.md -Destination C:\\Users\\bits.ps1 \n\nDetails: \nCommandInvocation(Start-BitsTransfer): \"Start-BitsTransfer\"\nParameterBinding(Start-BitsTransfer): name=\"Priority\"; value=\"foreground\"\nParameterBinding(Start-BitsTransfer): name=\"Source\"; value=\"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1197/T1197.md\"\nParameterBinding(Start-BitsTransfer): name=\"Destination\"; value=\"C:\\Users\\bits.ps1\""}, "eventdata": {}}}''',
            r'''{"win": {"system": {"providerName": "PowerShell", "providerGuid": {"@Name": "PowerShell"}, "eventID": "800", "level": "4", "task": "8", "keywords": "0x80000000000000", "systemTime": "2021-10-21T17:38:37.0000000Z", "eventRecordID": "473", "channel": "Windows PowerShell", "computer": "FS03.offsec.lan", "severityValue": "INFORMATION", "message": "Pipeline execution details for command line: . \n\nContext Information: \n\tDetailSequence=1\n\tDetailTotal=1\n\n\tSequenceNumber=25\n\n\tUserId=OFFSEC\\admmig\n\tHostName=ConsoleHost\n\tHostVersion=4.0\n\tHostId=2bc3f2aa-3ec3-49cc-a618-e2d1232518fb\n\tHostApplication=C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\n\tEngineVersion=4.0\n\tRunspaceId=e3cd9014-9076-4ada-ac80-9055ed3282c1\n\tPipelineId=6\n\tScriptName=\n\tCommandLine= \n\nDetails: \nCommandInvocation(Out-Default): \"Out-Default\""}, "eventdata": {}}}''',
            r'''{"win": {"system": {"providerName": "Microsoft-Windows-PowerShell", "providerGuid": "{a0c1853b-5c40-4b15-8766-3cf1c58f985a}", "eventID": "4103", "version": "1", "level": "4", "task": "106", "opcode": "20", "keywords": "0x0", "systemTime": "2021-10-21T17:38:37.0847450Z", "eventRecordID": "1739", "processID": "3336", "threadID": "3892", "channel": "Microsoft-Windows-PowerShell/Operational", "computer": "FS03.offsec.lan", "severityValue": "INFORMATION", "message": "CommandInvocation(Start-BitsTransfer): \"Start-BitsTransfer\"\nParameterBinding(Start-BitsTransfer): name=\"Priority\"; value=\"foreground\"\nParameterBinding(Start-BitsTransfer): name=\"Source\"; value=\"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1197/T1197.md\"\nParameterBinding(Start-BitsTransfer): name=\"Destination\"; value=\"C:\\Users\\bits.ps1\"\n\n\nContext:\n        Severity = Informational\n        Host Name = ConsoleHost\n        Host Version = 4.0\n        Host ID = 2bc3f2aa-3ec3-49cc-a618-e2d1232518fb\n        Host Application = C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\n        Engine Version = 4.0\n        Runspace ID = e3cd9014-9076-4ada-ac80-9055ed3282c1\n        Pipeline ID = 6\n        Command Name = Start-BitsTransfer\n        Command Type = Cmdlet\n        Script Name = \n        Command Path = \n        Sequence Number = 24\n        User = OFFSEC\\admmig\n        Shell ID = Microsoft.PowerShell\n\n\nUser Data:"}, "eventdata": {"contextInfo": "Severity = Informational\n        Host Name = ConsoleHost\n        Host Version = 4.0\n        Host ID = 2bc3f2aa-3ec3-49cc-a618-e2d1232518fb\n        Host Application = C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\n        Engine Version = 4.0\n        Runspace ID = e3cd9014-9076-4ada-ac80-9055ed3282c1\n        Pipeline ID = 6\n        Command Name = Start-BitsTransfer\n        Command Type = Cmdlet\n        Script Name = \n        Command Path = \n        Sequence Number = 24\n        User = OFFSEC\\admmig\n        Shell ID = Microsoft.PowerShell", "payload": "CommandInvocation(Start-BitsTransfer): \"Start-BitsTransfer\"\nParameterBinding(Start-BitsTransfer): name=\"Priority\"; value=\"foreground\"\nParameterBinding(Start-BitsTransfer): name=\"Source\"; value=\"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1197/T1197.md\"\nParameterBinding(Start-BitsTransfer): name=\"Destination\"; value=\"C:\\Users\\bits.ps1\""}}}''',
            r'''{"win": {"system": {"providerName": "Microsoft-Windows-PowerShell", "providerGuid": "{a0c1853b-5c40-4b15-8766-3cf1c58f985a}", "eventID": "4103", "version": "1", "level": "4", "task": "106", "opcode": "20", "keywords": "0x0", "systemTime": "2021-10-21T17:38:37.0847450Z", "eventRecordID": "1740", "processID": "3336", "threadID": "3892", "channel": "Microsoft-Windows-PowerShell/Operational", "computer": "FS03.offsec.lan", "severityValue": "INFORMATION", "message": "CommandInvocation(Out-Default): \"Out-Default\"\n\n\nContext:\n        Severity = Informational\n        Host Name = ConsoleHost\n        Host Version = 4.0\n        Host ID = 2bc3f2aa-3ec3-49cc-a618-e2d1232518fb\n        Host Application = C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\n        Engine Version = 4.0\n        Runspace ID = e3cd9014-9076-4ada-ac80-9055ed3282c1\n        Pipeline ID = 6\n        Command Name = \n        Command Type = Script\n        Script Name = \n        Command Path = \n        Sequence Number = 26\n        User = OFFSEC\\admmig\n        Shell ID = Microsoft.PowerShell\n\n\nUser Data:"}, "eventdata": {"contextInfo": "Severity = Informational\n        Host Name = ConsoleHost\n        Host Version = 4.0\n        Host ID = 2bc3f2aa-3ec3-49cc-a618-e2d1232518fb\n        Host Application = C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\n        Engine Version = 4.0\n        Runspace ID = e3cd9014-9076-4ada-ac80-9055ed3282c1\n        Pipeline ID = 6\n        Command Name = \n        Command Type = Script\n        Script Name = \n        Command Path = \n        Sequence Number = 26\n        User = OFFSEC\\admmig\n        Shell ID = Microsoft.PowerShell", "payload": "CommandInvocation(Out-Default): \"Out-Default\""}}}''',
            r'''{"win": {"system": {"providerName": "Microsoft-Windows-PowerShell", "providerGuid": "{a0c1853b-5c40-4b15-8766-3cf1c58f985a}", "eventID": "4104", "version": "1", "level": "5", "task": "102", "opcode": "15", "keywords": "0x0", "systemTime": "2021-10-21T17:38:37.0847450Z", "eventRecordID": "1741", "processID": "3336", "threadID": "4648", "channel": "Microsoft-Windows-PowerShell/Operational", "computer": "FS03.offsec.lan", "severityValue": "VERBOSE", "message": "Creating Scriptblock text (1 of 1):\n\n        [System.Diagnostics.DebuggerHidden()]\n        param()\n\n        $foundSuggestion = $false\n        \n        if($lastError -and\n            ($lastError.Exception -is \"System.Management.Automation.CommandNotFoundException\"))\n        {\n            $escapedCommand = [System.Management.Automation.WildcardPattern]::Escape($lastError.TargetObject)\n            $foundSuggestion = @(Get-Command ($ExecutionContext.SessionState.Path.Combine(\".\", $escapedCommand)) -ErrorAction Ignore).Count -gt 0\n        }\n\n        $foundSuggestion\n        \n\nScriptBlock ID: 6b72b20d-7411-4ab5-ab34-b9390cb58858\nPath: %5"}, "eventdata": {"messageNumber": "1", "messageTotal": "1", "scriptBlockText": "[System.Diagnostics.DebuggerHidden()]\n        param()\n\n        $foundSuggestion = $false\n        \n        if($lastError -and\n            ($lastError.Exception -is \"System.Management.Automation.CommandNotFoundException\"))\n        {\n            $escapedCommand = [System.Management.Automation.WildcardPattern]::Escape($lastError.TargetObject)\n            $foundSuggestion = @(Get-Command ($ExecutionContext.SessionState.Path.Combine(\".\", $escapedCommand)) -ErrorAction Ignore).Count -gt 0\n        }\n\n        $foundSuggestion", "scriptBlockId": "6b72b20d-7411-4ab5-ab34-b9390cb58858"}}}''',
            r'''{"win": {"system": {"providerName": "Microsoft-Windows-PowerShell", "providerGuid": "{a0c1853b-5c40-4b15-8766-3cf1c58f985a}", "eventID": "4104", "version": "1", "level": "5", "task": "102", "opcode": "15", "keywords": "0x0", "systemTime": "2021-10-21T17:38:37.0847450Z", "eventRecordID": "1742", "processID": "3336", "threadID": "4648", "channel": "Microsoft-Windows-PowerShell/Operational", "computer": "FS03.offsec.lan", "severityValue": "VERBOSE", "message": "Creating Scriptblock text (1 of 1):\n\"The command $($lastError.TargetObject) was not found, but does exist in the current location. Windows PowerShell does not load commands from the current location by default. If you trust this command, instead type `\".\\$($lastError.TargetObject)`\". See `\"get-help about_Command_Precedence`\" for more details.\"\n\nScriptBlock ID: 73dc84dd-f5ad-491d-bdcd-fb366790a46c\nPath: %5"}, "eventdata": {"messageNumber": "1", "messageTotal": "1", "scriptBlockText": "\"The command $($lastError.TargetObject) was not found, but does exist in the current location. Windows PowerShell does not load commands from the current location by default. If you trust this command, instead type `\".\\$($lastError.TargetObject)`\". See `\"get-help about_Command_Precedence`\" for more details.\"", "scriptBlockId": "73dc84dd-f5ad-491d-bdcd-fb366790a46c"}}}''',
            r'''{"win": {"system": {"providerName": "Microsoft-Windows-PowerShell", "providerGuid": "{a0c1853b-5c40-4b15-8766-3cf1c58f985a}", "eventID": "4104", "version": "1", "level": "5", "task": "102", "opcode": "15", "keywords": "0x0", "systemTime": "2021-10-21T17:38:37.1003523Z", "eventRecordID": "1743", "processID": "3336", "threadID": "3892", "channel": "Microsoft-Windows-PowerShell/Operational", "computer": "FS03.offsec.lan", "severityValue": "VERBOSE", "message": "Creating Scriptblock text (1 of 1):\nprompt\n\nScriptBlock ID: 7319562f-1401-46e1-92a8-57c1f8c05b33\nPath: %5"}, "eventdata": {"messageNumber": "1", "messageTotal": "1", "scriptBlockText": "prompt", "scriptBlockId": "7319562f-1401-46e1-92a8-57c1f8c05b33"}}}'''
        ]

        responses = send_multiple_logs(logs, location="stdin", log_format="json")

        # Ensure we receive a response for each log sent
        self.assertEqual(len(responses), len(logs))

        for _, response in enumerate(responses):
            self.assertEqual(response.status, LogtestStatus.RuleMatch)
            self.assertEqual(response.decoder, 'json')

            # Example: Set expected Wazuh rule ID and level when analyzing logs
            # expected_rule_id = None  # Replace with actual rule ID
            # expected_rule_level = None  # Replace with actual rule level

            # self.assertEqual(response.rule_id, expected_rule_id)
            # self.assertEqual(response.rule_level, expected_rule_level)

        # TODO: Write the expected result as test cases when the logs are analyzed by Wazuh.
        self.fail("Test not implemented yet. Define expected results.")
