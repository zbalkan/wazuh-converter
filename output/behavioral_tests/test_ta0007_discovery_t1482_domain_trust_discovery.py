import unittest

from internal.logtest import LogtestStatus, send_multiple_logs  # type: ignore


class TestTa0007DiscoveryT1482DomainTrustDiscovery(unittest.TestCase):

    def test_id80041034104_active_directory_forest_powershell_class(self) -> None:
        # Logs extracted from EVTX file
        logs = [
            r'''{"win": {"system": {"providerName": "PowerShell", "providerGuid": {"@Name": "PowerShell"}, "eventID": "800", "level": "4", "task": "8", "keywords": "0x80000000000000", "systemTime": "2021-12-12T06:56:59.0000000Z", "eventRecordID": "58512", "channel": "Windows PowerShell", "computer": "fs03vuln.offsec.lan", "severityValue": "INFORMATION", "message": "Pipeline execution details for command line: foreach ($s in [System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest().Sites ){write-host \"[>] (site) $s\";foreach ($r in $s.Subnets){write-host \"    \u2514\u2500> (subnet) $r\";foreach ($m in $s.Servers){write-host \"       \u2514\u2500> (server) $m\"}}}. \n\nContext Information: \n\tDetailSequence=1\n\tDetailTotal=1\n\n\tSequenceNumber=8165\n\n\tUserId=OFFSEC\\hack1\n\tHostName=ConsoleHost\n\tHostVersion=4.0\n\tHostId=a991c134-2e90-418c-940d-258271dd1e9c\n\tHostApplication=C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\n\tEngineVersion=4.0\n\tRunspaceId=4315d698-493e-410a-8e70-1c07123fdca4\n\tPipelineId=530\n\tScriptName=\n\tCommandLine=foreach ($s in [System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest().Sites ){write-host \"[>] (site) $s\";foreach ($r in $s.Subnets){write-host \"    \u2514\u2500> (subnet) $r\";foreach ($m in $s.Servers){write-host \"       \u2514\u2500> (server) $m\"}}} \n\nDetails: \nCommandInvocation(Write-Host): \"Write-Host\"\nParameterBinding(Write-Host): name=\"Object\"; value=\"[>] (site) OFFSEC-PREMISE\""}, "eventdata": {}}}''',
            r'''{"win": {"system": {"providerName": "PowerShell", "providerGuid": {"@Name": "PowerShell"}, "eventID": "800", "level": "4", "task": "8", "keywords": "0x80000000000000", "systemTime": "2021-12-12T06:56:59.0000000Z", "eventRecordID": "58513", "channel": "Windows PowerShell", "computer": "fs03vuln.offsec.lan", "severityValue": "INFORMATION", "message": "Pipeline execution details for command line: foreach ($s in [System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest().Sites ){write-host \"[>] (site) $s\";foreach ($r in $s.Subnets){write-host \"    \u2514\u2500> (subnet) $r\";foreach ($m in $s.Servers){write-host \"       \u2514\u2500> (server) $m\"}}}. \n\nContext Information: \n\tDetailSequence=1\n\tDetailTotal=1\n\n\tSequenceNumber=8167\n\n\tUserId=OFFSEC\\hack1\n\tHostName=ConsoleHost\n\tHostVersion=4.0\n\tHostId=a991c134-2e90-418c-940d-258271dd1e9c\n\tHostApplication=C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\n\tEngineVersion=4.0\n\tRunspaceId=4315d698-493e-410a-8e70-1c07123fdca4\n\tPipelineId=530\n\tScriptName=\n\tCommandLine=foreach ($s in [System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest().Sites ){write-host \"[>] (site) $s\";foreach ($r in $s.Subnets){write-host \"    \u2514\u2500> (subnet) $r\";foreach ($m in $s.Servers){write-host \"       \u2514\u2500> (server) $m\"}}} \n\nDetails: \nCommandInvocation(Write-Host): \"Write-Host\"\nParameterBinding(Write-Host): name=\"Object\"; value=\"[>] (site) LONDON\""}, "eventdata": {}}}''',
            r'''{"win": {"system": {"providerName": "PowerShell", "providerGuid": {"@Name": "PowerShell"}, "eventID": "800", "level": "4", "task": "8", "keywords": "0x80000000000000", "systemTime": "2021-12-12T06:56:59.0000000Z", "eventRecordID": "58514", "channel": "Windows PowerShell", "computer": "fs03vuln.offsec.lan", "severityValue": "INFORMATION", "message": "Pipeline execution details for command line: . \n\nContext Information: \n\tDetailSequence=1\n\tDetailTotal=1\n\n\tSequenceNumber=8169\n\n\tUserId=OFFSEC\\hack1\n\tHostName=ConsoleHost\n\tHostVersion=4.0\n\tHostId=a991c134-2e90-418c-940d-258271dd1e9c\n\tHostApplication=C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\n\tEngineVersion=4.0\n\tRunspaceId=4315d698-493e-410a-8e70-1c07123fdca4\n\tPipelineId=530\n\tScriptName=\n\tCommandLine= \n\nDetails: \nCommandInvocation(Out-Default): \"Out-Default\""}, "eventdata": {}}}''',
            r'''{"win": {"system": {"providerName": "Microsoft-Windows-PowerShell", "providerGuid": "{a0c1853b-5c40-4b15-8766-3cf1c58f985a}", "eventID": "4104", "version": "1", "level": "5", "task": "102", "opcode": "15", "keywords": "0x0", "systemTime": "2021-12-12T06:56:59.6573904Z", "eventRecordID": "73244", "processID": "4960", "threadID": "2608", "channel": "Microsoft-Windows-PowerShell/Operational", "computer": "fs03vuln.offsec.lan", "severityValue": "VERBOSE", "message": "Creating Scriptblock text (1 of 1):\nforeach ($s in [System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest().Sites ){write-host \"[>] (site) $s\";foreach ($r in $s.Subnets){write-host \"    \u2514\u2500> (subnet) $r\";foreach ($m in $s.Servers){write-host \"       \u2514\u2500> (server) $m\"}}}\n\nScriptBlock ID: b2d840ae-11f6-4610-adfb-938db51754c2\nPath: %5"}, "eventdata": {"messageNumber": "1", "messageTotal": "1", "scriptBlockText": "foreach ($s in [System.DirectoryServices.ActiveDirectory.Forest]::GetCurrentForest().Sites ){write-host \"[>] (site) $s\";foreach ($r in $s.Subnets){write-host \"    \u2514\u2500> (subnet) $r\";foreach ($m in $s.Servers){write-host \"       \u2514\u2500> (server) $m\"}}}", "scriptBlockId": "b2d840ae-11f6-4610-adfb-938db51754c2"}}}''',
            r'''{"win": {"system": {"providerName": "Microsoft-Windows-PowerShell", "providerGuid": "{a0c1853b-5c40-4b15-8766-3cf1c58f985a}", "eventID": "4103", "version": "1", "level": "4", "task": "106", "opcode": "20", "keywords": "0x0", "systemTime": "2021-12-12T06:56:59.6573904Z", "eventRecordID": "73245", "processID": "4960", "threadID": "2608", "channel": "Microsoft-Windows-PowerShell/Operational", "computer": "fs03vuln.offsec.lan", "severityValue": "INFORMATION", "message": "CommandInvocation(Write-Host): \"Write-Host\"\nParameterBinding(Write-Host): name=\"Object\"; value=\"[>] (site) OFFSEC-PREMISE\"\n\n\nContext:\n        Severity = Informational\n        Host Name = ConsoleHost\n        Host Version = 4.0\n        Host ID = a991c134-2e90-418c-940d-258271dd1e9c\n        Host Application = C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\n        Engine Version = 4.0\n        Runspace ID = 4315d698-493e-410a-8e70-1c07123fdca4\n        Pipeline ID = 530\n        Command Name = Write-Host\n        Command Type = Cmdlet\n        Script Name = \n        Command Path = \n        Sequence Number = 8166\n        User = OFFSEC\\hack1\n        Shell ID = Microsoft.PowerShell\n\n\nUser Data:"}, "eventdata": {"contextInfo": "Severity = Informational\n        Host Name = ConsoleHost\n        Host Version = 4.0\n        Host ID = a991c134-2e90-418c-940d-258271dd1e9c\n        Host Application = C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\n        Engine Version = 4.0\n        Runspace ID = 4315d698-493e-410a-8e70-1c07123fdca4\n        Pipeline ID = 530\n        Command Name = Write-Host\n        Command Type = Cmdlet\n        Script Name = \n        Command Path = \n        Sequence Number = 8166\n        User = OFFSEC\\hack1\n        Shell ID = Microsoft.PowerShell", "payload": "CommandInvocation(Write-Host): \"Write-Host\"\nParameterBinding(Write-Host): name=\"Object\"; value=\"[>] (site) OFFSEC-PREMISE\""}}}''',
            r'''{"win": {"system": {"providerName": "Microsoft-Windows-PowerShell", "providerGuid": "{a0c1853b-5c40-4b15-8766-3cf1c58f985a}", "eventID": "4103", "version": "1", "level": "4", "task": "106", "opcode": "20", "keywords": "0x0", "systemTime": "2021-12-12T06:56:59.6730185Z", "eventRecordID": "73246", "processID": "4960", "threadID": "2608", "channel": "Microsoft-Windows-PowerShell/Operational", "computer": "fs03vuln.offsec.lan", "severityValue": "INFORMATION", "message": "CommandInvocation(Write-Host): \"Write-Host\"\nParameterBinding(Write-Host): name=\"Object\"; value=\"[>] (site) LONDON\"\n\n\nContext:\n        Severity = Informational\n        Host Name = ConsoleHost\n        Host Version = 4.0\n        Host ID = a991c134-2e90-418c-940d-258271dd1e9c\n        Host Application = C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\n        Engine Version = 4.0\n        Runspace ID = 4315d698-493e-410a-8e70-1c07123fdca4\n        Pipeline ID = 530\n        Command Name = Write-Host\n        Command Type = Cmdlet\n        Script Name = \n        Command Path = \n        Sequence Number = 8168\n        User = OFFSEC\\hack1\n        Shell ID = Microsoft.PowerShell\n\n\nUser Data:"}, "eventdata": {"contextInfo": "Severity = Informational\n        Host Name = ConsoleHost\n        Host Version = 4.0\n        Host ID = a991c134-2e90-418c-940d-258271dd1e9c\n        Host Application = C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\n        Engine Version = 4.0\n        Runspace ID = 4315d698-493e-410a-8e70-1c07123fdca4\n        Pipeline ID = 530\n        Command Name = Write-Host\n        Command Type = Cmdlet\n        Script Name = \n        Command Path = \n        Sequence Number = 8168\n        User = OFFSEC\\hack1\n        Shell ID = Microsoft.PowerShell", "payload": "CommandInvocation(Write-Host): \"Write-Host\"\nParameterBinding(Write-Host): name=\"Object\"; value=\"[>] (site) LONDON\""}}}''',
            r'''{"win": {"system": {"providerName": "Microsoft-Windows-PowerShell", "providerGuid": "{a0c1853b-5c40-4b15-8766-3cf1c58f985a}", "eventID": "4103", "version": "1", "level": "4", "task": "106", "opcode": "20", "keywords": "0x0", "systemTime": "2021-12-12T06:56:59.6730185Z", "eventRecordID": "73247", "processID": "4960", "threadID": "2608", "channel": "Microsoft-Windows-PowerShell/Operational", "computer": "fs03vuln.offsec.lan", "severityValue": "INFORMATION", "message": "CommandInvocation(Out-Default): \"Out-Default\"\n\n\nContext:\n        Severity = Informational\n        Host Name = ConsoleHost\n        Host Version = 4.0\n        Host ID = a991c134-2e90-418c-940d-258271dd1e9c\n        Host Application = C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\n        Engine Version = 4.0\n        Runspace ID = 4315d698-493e-410a-8e70-1c07123fdca4\n        Pipeline ID = 530\n        Command Name = \n        Command Type = Script\n        Script Name = \n        Command Path = \n        Sequence Number = 8170\n        User = OFFSEC\\hack1\n        Shell ID = Microsoft.PowerShell\n\n\nUser Data:"}, "eventdata": {"contextInfo": "Severity = Informational\n        Host Name = ConsoleHost\n        Host Version = 4.0\n        Host ID = a991c134-2e90-418c-940d-258271dd1e9c\n        Host Application = C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\n        Engine Version = 4.0\n        Runspace ID = 4315d698-493e-410a-8e70-1c07123fdca4\n        Pipeline ID = 530\n        Command Name = \n        Command Type = Script\n        Script Name = \n        Command Path = \n        Sequence Number = 8170\n        User = OFFSEC\\hack1\n        Shell ID = Microsoft.PowerShell", "payload": "CommandInvocation(Out-Default): \"Out-Default\""}}}''',
            r'''{"win": {"system": {"providerName": "Microsoft-Windows-PowerShell", "providerGuid": "{a0c1853b-5c40-4b15-8766-3cf1c58f985a}", "eventID": "4104", "version": "1", "level": "5", "task": "102", "opcode": "15", "keywords": "0x0", "systemTime": "2021-12-12T06:56:59.6730185Z", "eventRecordID": "73248", "processID": "4960", "threadID": "2608", "channel": "Microsoft-Windows-PowerShell/Operational", "computer": "fs03vuln.offsec.lan", "severityValue": "VERBOSE", "message": "Creating Scriptblock text (1 of 1):\nprompt\n\nScriptBlock ID: 358e573c-2b97-4331-8088-3493bbadecdd\nPath: %5"}, "eventdata": {"messageNumber": "1", "messageTotal": "1", "scriptBlockText": "prompt", "scriptBlockId": "358e573c-2b97-4331-8088-3493bbadecdd"}}}'''
        ]

        responses = send_multiple_logs(logs, location="stdin", log_format="json")

        # Ensure we receive a response for each log sent
        self.assertEqual(len(responses), len(logs))

        for _, response in enumerate(responses):
            self.assertEqual(response.status, LogtestStatus.RuleMatch)
            self.assertEqual(response.decoder, 'json')

            # Example: Set expected Wazuh rule ID and level when analyzing logs
            # expected_rule_id = None  # Replace with actual rule ID
            # expected_rule_level = None  # Replace with actual rule level

            # self.assertEqual(response.rule_id, expected_rule_id)
            # self.assertEqual(response.rule_level, expected_rule_level)

        # TODO: Write the expected result as test cases when the logs are analyzed by Wazuh.
        self.fail("Test not implemented yet. Define expected results.")
